1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.nginx.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "bskyweb.fullname" . }}-nginx)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.nginx.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "bskyweb.fullname" . }}-nginx'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "bskyweb.fullname" . }}-nginx --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.nginx.service.port }}
{{- else if contains "ClusterIP" .Values.nginx.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "bskyweb.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=nginx" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the deployment status:
  kubectl get deployment {{ include "bskyweb.fullname" . }} -n {{ .Release.Namespace }}
  kubectl get deployment {{ include "bskyweb.fullname" . }}-nginx -n {{ .Release.Namespace }}

3. View pod logs:
  kubectl logs -f deployment/{{ include "bskyweb.fullname" . }} -n {{ .Release.Namespace }}
  kubectl logs -f deployment/{{ include "bskyweb.fullname" . }}-nginx -n {{ .Release.Namespace }}

4. Scale the deployment:
  kubectl scale deployment {{ include "bskyweb.fullname" . }} --replicas=2 -n {{ .Release.Namespace }}

Application Details:
- Chart: {{ .Chart.Name }} v{{ .Chart.Version }}
- App Version: {{ .Chart.AppVersion }}
- Image: {{ include "bskyweb.image" . }}
- Namespace: {{ .Release.Namespace }}

{{- if .Values.bskyweb.healthCheck.enabled }}
Health Check: Enabled ({{ .Values.bskyweb.healthCheck.path }})
{{- end }}
{{- if .Values.bskyweb.readinessProbe.enabled }}
Readiness Probe: Enabled ({{ .Values.bskyweb.readinessProbe.path }})
{{- end }}