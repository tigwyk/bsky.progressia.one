name: Build and Push bskyweb to DigitalOcean Registry

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    paths:
      - 'Dockerfile'
      - 'bskyweb/**'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/build-and-push-bskyweb-do.yaml'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'Dockerfile'
      - 'bskyweb/**'
      - 'go.mod'
      - 'go.sum'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            registry.digitalocean.com/progressiaone/social.progressia.one
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{date 'YYYYMMDD'}}-
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=bskyweb
            org.opencontainers.image.description=bskyweb service for Progressia.one
            org.opencontainers.image.vendor=Progressia.one
      
      - name: Login to DigitalOcean Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DO_REGISTRY_USER }}
          password: ${{ secrets.DO_REGISTRY_SECRET }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            EXPO_PUBLIC_ENV=production
            RENDER_GIT_COMMIT=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64